dbcp.connection.url=${hibernate.connection.url}
dbcp.connection.driver_class=${hibernate.connection.driver_class}
dbcp.connection.username=${hibernate.connection.username}
dbcp.connection.password=${hibernate.connection.password}
dbcp.default_schema=${hibernate.default_schema}

## Configuraci\u00f3n - Pool de Conexiones de Apache (dbcp)
#The default auto-commit state of connections created by this pool.
dbcp.defaultAutoCommit=true
#The default read-only state of connections created by this pool.
#If not set then the setReadOnly method will not be called. (Some drivers don't support read only mode, ex: Informix)
dbcp.defaultReadOnly=driver default
#The default TransactionIsolation state of connections created by this pool. One of the following
# NONE,READ_COMMITTED,READ_UNCOMMITTED,REPEATABLE_READ,SERIALIZABLE
dbcp.defaultTransactionIsolation=driver default
# La maxima cantidad inicial de conexiones que son creadas cuando el Pool es creado.
#dbcp.initialSize=100
#La maxima cantidad de conexiones activas que el pool va a contener al mismo tiempo.
dbcp.maxActive=100
#La maxima cantidad de conexiones activas que permaneceran desocupadas en el pool.
dbcp.maxIdle=10
#La minima cantidad de conexiones activas que permaneceran desocupadas en el pool.
dbcp.minIdle=1
#El tiempo en milisegundos que el pool espera para lanzar una excepcion cuando no hay conexiones disponibles
dbcp.maxWait=0
#The SQL query that will be used to validate connections from this pool before
#returning them to the caller. If specified, this query MUST be an SQL SELECT
#statement that returns at least one row.
#dbcp.validationQuery=
#The indication of whether objects will be validated before being borrowed from the pool.
#If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another.
#NOTE - for a true value to have any effect, the validationQuery parameter must be set to a non-null string.
dbcp.testOnBorrow=true
#The indication of whether objects will be validated before being returned to the pool.
#NOTE - for a true value to have any effect, the validationQuery parameter must be set to a non-null string.
dbcp.testOnReturn=false
#The indication of whether objects will be validated by the idle object evictor (if any).
#If an object fails to validate, it will be dropped from the pool.
#NOTE - for a true value to have any effect, the validationQuery parameter must be set to a non-null string.
dbcp.testWhileIdle=true
#Enable prepared statement pooling for this pool.
dbcp.poolPreparedStatements=false
#The maximum number of open statements that can be allocated from the statement pool
#at the same time,or zero for no limit.
dbcp.maxOpenPreparedStatements=0