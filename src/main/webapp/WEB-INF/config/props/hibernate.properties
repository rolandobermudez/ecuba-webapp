#Postgres SQL
#hibernate.connection.url=://<DB_HOST>:<DB_PORT(5432)>/<DB_NAME>
hibernate.connection.url=jdbc:postgresql://127.0.0.1:5432/etest
hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
hibernate.connection.driver_class=org.postgresql.Driver
hibernate.default_schema=public
hibernate.connection.username=postgres
hibernate.connection.password=postgres
#hibernate.hbm2ddl.auto=validate

#hibernate.connection.url=://<DB_HOST>:<DB_PORT(1521)>/<DB_NAME>
#hibernate.connection.url=jdbc:oracle:thin:@192.168.1.24:1521:EDS
#hibernate.dialect=org.hibernate.dialect.OracleDialect
#hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver
#hibernate.default_schema=EDS
#hibernate.connection.username=eds
#hibernate.connection.password=edsadmin2014
#hibernate.hbm2ddl.auto=create

#SQL Server
#hibernate.connection.url=jdbc:microsoft:sqlserver://<DB_HOST>:<DB_PORT(1433)>;<DB_NAME>[;SelectMethod=cursor]
#hibernate.connection.url=jdbc:microsoft:sqlserver://127.0.01:1433;Databasename=wanted
#hibernate.dialect=org.hibernate.dialect.SQLServerDialect
#hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver
#hibernate.default_schema=public
#hibernate.connection.username=sqlserver
#hibernate.connection.password=sqlserver
#hibernate.hbm2ddl.auto=validate

#hibernate.map=classpath:/com/wanted21/dao/maps/*.hbm.xml
hibernate.map=classpath*:/**/*.hbm.xml

##Configuracion - Segunda Cach\u00e9 ..
#The classname of a custom CacheProvider.
hibernate.cache.provider_class=net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
#Localizacion del fichero de configuracion de EhCache.
hibernate.cache.provider_configuration_file_resource_path=com/ecuba/dao/cache/ecuba-config-cache.xml
#Optimize second-level cache operation to minimize writes, at the cost of more frequent reads.
#This setting is most useful for clustered caches and,in Hibernate3,
#is enabled by default for clustered cache implementations.
hibernate.cache.use_minimal_puts=false
#Enable the query cache, individual queries still have to be set cachable.
hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
hibernate.cache.use_query_cache=true
#May be used to completely disable the second level cache, which is enabled by default
#for classes which specify a <cache>  mapping.
hibernate.cache.use_second_level_cache=true
#The classname of a custom QueryCache interface, defaults to the built-in StandardQueryCache
#hibernate.cache.query_cache_factory=
#A prefix to use for second-level cache region names.
hibernate.cache.region_prefix=local
#Forces Hibernate to store data in the second-level cache in a more human-friendly format.
hibernate.cache.use_structured_entries=false

#Configuracion  - Hibernate
#Write all SQL statements to console.
hibernate.show_sql=true
#Set a maximum "depth" for the outer join fetch tree for single-ended associations (one-to-one,
#manyto-one). A 0 disables default outer join fetching.(0-3 recommended)
hibernate.max_fetch_depth=2
#If enabled, Hibernate will collect statistics useful for performance tuning.
hibernate.generate_statistics=true
#If turned on, Hibernate will generate comments inside the SQL, for easier debugging, defaults to false.
hibernate.use_sql_comments=true
#Automatically validate or export schema DDL to the database when the SessionFactory is created.
#With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.
#eg. validate | update | create | create-drop
hibernate.hbm2ddl.auto=update
#Enables use of CGLIB instead of runtime reflection (System-level property). Reflection can sometimes be
#useful when troubleshooting, note that Hibernate always requires CGLIB even if you turn off the optimizer.
#You can not set this property in hibernate.cfg.xml.
#hibernate.cglib.use_reflection_optimizer=false
